name: 🧪 Epic - Login Tests

on:
  workflow_dispatch:  # Permite ejecutarlo manualmente desde GitHub Actions

jobs:
  run-products-tests:
    runs-on: ubuntu-latest

    steps:
      # 🧾 1. Descargar el repositorio
      - name: Checkout repo
        uses: actions/checkout@v4

      # 🟦 2. Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 📦 3. Instalar dependencias
      - name: Install dependencies
        run: npm ci

      # 🧪 4. Ejecutar los tests de Cypress con Cucumber y Allure habilitado
      - name: Run Products Tests
        run: |
          npx cypress run \
            --env allure=true \
            --config specPattern='cypress/e2e/features/login/*.feature'

      # 📼 5. Subir videos y capturas de pantalla como artifacts (para debugging)
      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      # 📊 6. Instalar Allure CLI
      - name: Install Allure CLI
        run: npm install -g allure-commandline

      # 📈 7. Generar reporte Allure (se espera que npm run generate-allure-report esté definido)
      - name: Generate Allure Report
        run: npm run generate-allure-report

      # 🧾 7.5 Generar índice de historial Allure
      - name: Generate Allure History Index
        run: node .github/scripts/generate-history-index.js

      # 🗃 8. Subir el reporte Allure como artifact simple (descargable desde el workflow)
      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-Login
          path: allure-report

      # 🌐 9. Publicar el reporte Allure en GitHub Pages con historial por fecha
      - name: Deploy Allure Report to GitHub Pages (Login with Date)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: login/history/${{ github.run_id }}
          ##ojo aca donde se define el destino del reporte, se puede cambiar a Epica/history si es necesario  

     # 🌐 9.5 Publicar historial general con índice
      - name: Deploy Allure History Index
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-history
          destination_dir: login/history

      # 🧷 10. Comentar automáticamente en los tickets de Jira
      - name: Add Comment to Jira Tickets
        env:
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: node .github/scripts/comment-to-jira.js login
